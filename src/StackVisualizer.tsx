import React, { useRef, useState, useEffect, useMemo } from 'react';
import { getOPName, StackElement } from './StackElement';
import { StackRenderer } from './StackRenderer';
import { PendingStackElementRenderer } from './PendingStackElementRenderer';
import { LockingScript, OP, Script, Spend, UnlockingScript } from '@bsv/sdk';
import { OPCodeArgumentCount } from './utils';

export const StackVisualizer: React.FC = () => {
  const [stacks, setStacks] = useState<{
    main: number[][];
    alt: number[][];
    if: boolean[];
  }>({
    main: [],
    alt: [],
    if: []
  });

  const [unlockingScriptHex, setUnlockingScriptHex] = useState('');
  const [lockingScriptHex, setLockingScriptHex] = useState('');
  const bothScriptsEntered = lockingScriptHex !== '' && unlockingScriptHex !== '';

  // state to track hovered element
  const [hoveredElement, setHoveredElement] = useState<StackElement | null>(null);
  const hoverTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);

  // State to track clicked element
  const [clickedElement, setClickedElement] = useState<StackElement | null>(null);

  // Focused element is either hovered or clicked (from stack or pending)
  const [focusedElement, setFocusedElement] = useState<StackElement | null>(null);

  const [spendSimulation, setSpendSimulation] = useState<Spend | null>(null);

  // Memoize the pending stack element to maintain object identity
  const pendingStackElement = useMemo(() => {
    if (spendSimulation === null) return null

    const currentScript = spendSimulation.context === 'UnlockingScript' ? spendSimulation.unlockingScript : spendSimulation.lockingScript
    if (spendSimulation.programCounter >= currentScript.chunks.length) {
      return null
    }
    const operation = currentScript.chunks[spendSimulation.programCounter]

    if (operation.data) {
      return new StackElement(operation.data.map(byte => byte.toString(16).padStart(2, '0')).join(''), "PendingPushdata")
    } else {
      return new StackElement(operation.op.toString(16), "PendingOP")
    }
  }, [spendSimulation?.context, spendSimulation?.programCounter, spendSimulation?.unlockingScript, spendSimulation?.lockingScript])

  const [numStackElementsUsedByPendingOP, setNumStackElementsUsedByPendingOP] = useState<number>(0);


  // Update focusedElement based on hover and click states
  useEffect(() => {
    if (hoveredElement) {
      setFocusedElement(hoveredElement);
    } else if (clickedElement) {
      setFocusedElement(clickedElement);
    } else {
      setFocusedElement(null);
    }
  }, [clickedElement, hoveredElement]);

  // Whenever the pending stack element changes, 
  // update the focused element to either the pending element or null
  useEffect(() => {
    setHoveredElement(null);
    setClickedElement(pendingStackElement);
  }, [pendingStackElement])

  const handleInitializedSimulation = () => {
    const newSpendSimulation = new Spend({
      sourceTXID: "mockTxID",
      sourceOutputIndex: 0,
      sourceSatoshis: 0,
      lockingScript: Script.fromHex(lockingScriptHex) as LockingScript,
      transactionVersion: 0,
      otherInputs: [],
      outputs: [],
      unlockingScript: Script.fromHex(unlockingScriptHex) as UnlockingScript,
      inputSequence: 0,
      inputIndex: 0,
      lockTime: 0
    })

    setSpendSimulation(newSpendSimulation);
    // Initialize the stacks with the new simulation state
    setStacks({
      main: [...newSpendSimulation.stack],
      alt: [...newSpendSimulation.altStack],
      if: [...newSpendSimulation.ifStack]
    });
  }

  const resetSimulation = () => {
    handleInitializedSimulation();
    // The stacks will be updated when the new simulation is created
  };

  const handleAdvanceOneStep = () => {
    if (spendSimulation === null) {
      return
    }
    spendSimulation.step();
    // Force re-render by creating new array references - single state update
    setStacks({
      main: [...spendSimulation.stack],
      alt: [...spendSimulation.altStack],
      if: [...spendSimulation.ifStack]
    });
  };

  const handleAdvanceTenSteps = () => {
    if (spendSimulation === null) {
      return
    }
    for (let i = 0; i < 10; i++) {
      spendSimulation.step();
    }
    // Force re-render by creating new array references - single state update
    setStacks({
      main: [...spendSimulation.stack],
      alt: [...spendSimulation.altStack],
      if: [...spendSimulation.ifStack]
    });
  }

  // Helper function to get pending element without memoization (for loops)
  const getPendingStackElementHelper = () => {
    if (spendSimulation === null) return null

    const currentScript = spendSimulation.context === 'UnlockingScript' ? spendSimulation.unlockingScript : spendSimulation.lockingScript
    if (spendSimulation.programCounter >= currentScript.chunks.length) {
      return null
    }
    const operation = currentScript.chunks[spendSimulation.programCounter]

    if (operation.data) {
      return new StackElement(operation.data.map(byte => byte.toString(16).padStart(2, '0')).join(''), "PendingPushdata")
    } else {
      return new StackElement(operation.op.toString(16), "PendingOP")
    }
  }

  const handleAdvanceToNextComputation = () => {
    if (spendSimulation === null) {
      return
    }
    let currentPendingElement = getPendingStackElementHelper();
    let isScriptExecuting;
    do {
      spendSimulation.step();
      isScriptExecuting = !spendSimulation.ifStack.includes(false);
      if (isScriptExecuting) {
        currentPendingElement = getPendingStackElementHelper();
      }
    } while (!isScriptExecuting || (currentPendingElement && !currentPendingElement.triggersComputation()))
    // Force re-render by creating new array references - single state update
    setStacks({
      main: [...spendSimulation.stack],
      alt: [...spendSimulation.altStack],
      if: [...spendSimulation.ifStack]
    });
  }


  return (
    <div
      style={{
        display: 'flex',
        flexDirection: 'row',
        height: '100vh',
        width: '100vw',
        overflow: 'scroll'
      }}
    >
      {/* Left Section */}
      <div
        style={{
          flexBasis: '20%',
          flexShrink: 0,
          flexGrow: 0,
          backgroundColor: '#f4f4f4',
          padding: '20px',
          boxSizing: 'border-box',
          overflowY: 'auto',
        }}
      >
        <h3>Unlocking Script Input</h3>
        <textarea
          value={unlockingScriptHex}
          onChange={(e) => setUnlockingScriptHex(e.target.value)}
          rows={10}
          style={{ width: '100%', resize: 'vertical' }}
        />

        <h3>Locking Script Input</h3>
        <textarea
          value={lockingScriptHex}
          onChange={(e) => setLockingScriptHex(e.target.value)}
          rows={10}
          style={{ width: '100%', resize: 'vertical' }}
        />

        <div style={{ textAlign: 'center', marginTop: '20px'}}>
          <button 
            onClick={handleInitializedSimulation}
            style={{
              marginTop: '10px',
              padding: '10px 20px',
              fontSize: '16px',
              backgroundColor: bothScriptsEntered ?  '#4caf50' : '#ccc',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor:bothScriptsEntered ? 'pointer' : 'not-allowed',
              transition: 'background-color 0.3s, transform 0.1s',}}
            disabled={ !bothScriptsEntered }
            onMouseDown={(e) => {
              if (bothScriptsEntered) e.currentTarget.style.transform = 'scale(0.96)';
            }}
            onMouseUp={(e) => {
              if (bothScriptsEntered) e.currentTarget.style.transform = 'scale(1)';
            }}
            onMouseLeave={(e) => {
              if (bothScriptsEntered) e.currentTarget.style.transform = 'scale(1)';
            }}
          >
            Simulate Validation
          </button>
        </div>
      </div>

      {/* Middle Section (Main Content) */}
      <div
        style={{
          flexBasis: '40%',
          flexShrink: 0,
          flexGrow: 0,
          padding: '10px',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          overflow: 'hidden',
          position: 'relative',
        }}
      >
        {/* Fixed Control Buttons */}
        <div
          style={{
            position: 'sticky',
            top: 0,
            backgroundColor: '#fff',
            zIndex: 1,
            paddingBottom: '10px',
            textAlign: 'center',
            width: '100%',
          }}
        >
          <button onClick={handleAdvanceOneStep} style={{ marginRight: '10px' }}>Advance 1 Step</button>
          <button onClick={handleAdvanceTenSteps} style={{ marginRight: '10px' }}>Advance 10 Step</button>
          <button onClick={handleAdvanceToNextComputation} style={{ marginRight: '10px' }}>Advance to the Next Computation</button>
          <button onClick={resetSimulation}>Reset Simulation</button>
        </div>
        
        {pendingStackElement ? (
          <div>
            <h3>Next Op code to be executed:</h3>
            <PendingStackElementRenderer
              pendingStackElement={pendingStackElement}
              clickedElement={clickedElement}
              setClickedElement={setClickedElement}
              setHoveredElement={setHoveredElement}
              hoverTimeoutRef={hoverTimeoutRef}
              focusedElement={focusedElement}
            />
          </div>
        ) : (
          <div></div>
        )}

        {/* Two Stacks Side-by-Side */}
        <div style={{ display: 'flex', justifyContent:'center', gap: '20px', overflowY: 'scroll', paddingTop: '10px', height:'100%'}}>
          {/* Main Stack */}

          <div
            style={{
              width: '200px',
              border: '2px solid black',
              borderTop: "none",
              display: 'flex',
              flexDirection: 'column-reverse',
              alignItems: 'center',
              padding: '10px',
            }}
          >
            <StackRenderer
              stack={stacks.main}
              pendingStackElement={pendingStackElement}
              clickedElement={clickedElement}
              setClickedElement={setClickedElement}
              setHoveredElement={setHoveredElement}
              hoverTimeoutRef={hoverTimeoutRef}
              focusedElement={focusedElement}
            />
            <h3>Main Stack</h3>
          </div>

          {/* AltStack (no controls, readonly) */}
          <div
            style={{
              width: '200px',
              border: '2px dashed gray',
              display: 'flex',
              borderTop: "none",
              flexDirection: 'column-reverse',
              alignItems: 'center',
              padding: '10px',
            }}
          >
            <StackRenderer
              stack={stacks.alt}
              pendingStackElement={pendingStackElement}
              clickedElement={clickedElement}
              setClickedElement={setClickedElement}
              setHoveredElement={setHoveredElement}
              hoverTimeoutRef={hoverTimeoutRef}
              focusedElement={focusedElement}
            />
            <h3>Alt Stack</h3>
          </div>
      </div>
    </div>

      {/* Right Section */}
      <div
        style={{
          flexBasis: '40%',
          flexShrink: 0,
          flexGrow: 0,
          backgroundColor: '#f0f0f0',
          padding: '20px',
          boxSizing: 'border-box',
          overflowY: 'auto',
        }}
      >
        {spendSimulation === null ? (
           <p>Need a unlocking script and a locking script for a simulation</p>
        ) : (
          <div
            style={{
              marginBottom: '20px',
              padding: '10px',
              backgroundColor: '#e3f2fd',
              border: '1px solid #90caf9',
              borderRadius: '6px',
              fontSize: '14px',
            }}
          >
            <strong>Simulation Current State:</strong>
            <div>Current script: {spendSimulation.context}</div>
            {spendSimulation.context === 'UnlockingScript' ? (
              <div>
                <div>Program counter: {spendSimulation.programCounter} / {spendSimulation.unlockingScript.chunks.length}</div>
                { spendSimulation.programCounter === spendSimulation.unlockingScript.chunks.length ? (
                  <div>Finished executing unlocking script, moving to locking script.</div>
                ) : (
                  <div></div>
                )}
              </div>
            ) : (
              <div>
                <div>Program counter: {spendSimulation.programCounter} / {spendSimulation.lockingScript.chunks.length}</div>
                { spendSimulation.programCounter === spendSimulation.lockingScript.chunks.length ? (
                  <div>Finished executing locking script.</div>
                ) : (
                  <div></div>
                )}
              </div>
              
            )}
            
            <div>Main stack size: {stacks.main.length}</div>
            <div>Alt stack size: {stacks.alt.length}</div>
            <div>If stack: {"[" + spendSimulation.ifStack.map(el => el ? 'true' : 'false').join(', ') + "]"}</div>
            { spendSimulation.ifStack.includes(false) ? (
              <div>Inside a false IF branch, skipping operations.</div>
            ) : (
              <div></div>
            )}
            <div>#OPs in unlocking script: {spendSimulation.unlockingScript.chunks.length}</div>
            <div>#OPs in locking script: {spendSimulation.lockingScript.chunks.length}</div>
          </div>
        )}

        {focusedElement ? (
          <div style={{ border: '1px solid #aaa', padding: '10px', borderRadius: '8px', backgroundColor: '#fff' }}>
            <h4>Stack Element Info</h4>
            <p><strong>Description:</strong></p>
            <p style={{wordWrap: 'break-word'}}>{focusedElement.getDetailString()}</p>
          </div>
        ) : (
          <p>Hover over or click a stack element for info...</p>
        )}
      </div>
    </div>
  );
};
